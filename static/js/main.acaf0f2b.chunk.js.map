{"version":3,"sources":["logo.svg","reqs.js","step.js","svgDraw.js","svgDrawContext.js","svgContainer.js","connection.js","data.js","loader.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ReqTypes","ReqTypeNames","_ReqTypeNames","Object","defineProperty","nameOfReq","req","toString","UsesUpType","type","amount","classCallCheck","this","createClass","key","value","UsesUp","Step","_this","react_default","a","createElement","className","props","status","checked","onChange","onCheckClicked","name","description","style","fontWeight","marginTop","requirements","map","element","outputs","React","Component","GUTTER_WIDTH","COLUMN_WIDTH","signum","x","absolute","connectElements","svgContainer","svg","path","startElem","endElem","offset","left","temp","svgTop","top","svgLeft","startCoord","endCoord","tweak","outerHeight","startX","startY","endX","endY","stroke","parseFloat","attr","deltaX","deltaY","delta","arc1","arc2","riseX","Math","floor","drawPath","outerWidth","SVGDraw","connections","node1","node2","push","reset","forEach","connection","$","newSVG","newSVGContainer","window","resize","bind","connectAll","SVGDrawContext","createContext","SVGContainer","possibleConstructorReturn","getPrototypeOf","call","svgDraw","setUp","ReactDOM","findDOMNode","find","width","height","svgDrawContext","Provider","children","Connection","context","connect","startRef","current","endRef","random","d","fill","strokeWidth","contextType","STARTING_MATERIALS","Set","STEPS","File name change petition","Get copies of court order","Request therapist letter","Request physician letter","Go to Social Security","Go to MVA HQ","Go to MVA","Go to passport place","Loader","state","completedSteps","materials","has","steps","sources","_this2","nextMaterials","nextSteps","remainingSteps","nextSources","objectSpread","values","step","satisfiesRequirement","reduce","acc","curr","concat","toConsumableArray","o","getNextColumn","columns","counter","next","connectionRefs","ref","allComponentsDidMount","scroll","e","css","scrollLeft","index","el","undefined","setState","oldState","splice","_this3","columnsWithSources","getColumnsWithSources","stepRefs","column","createRef","getRawReq","currentMaterials","length","stepName","stepStatuses","getAvailableSteps","Fragment","src_connection","src_step","assign","stepChecked","App","src","loader","Boolean","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acaf0f2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const ReqTypes = {\r\n    \"MONEY\": 0,\r\n    \"THERAPIST\": 1,\r\n    \"PHYSICIAN\": 2,\r\n    \"THERAPIST_LETTER\": 3,\r\n    \"PHYSICIAN_LETTER\": 4,\r\n    \"COURT_ORDER\": 5,\r\n    \"SOCIAL_SECURITY_CARD\": 6,\r\n    \"MVA_LETTER\": 7,\r\n    \"DIGIAL_SOCIAL_SECURITY_UPDATE\": 8,\r\n    \"INITIAL_COURT_ORDER\": 9,\r\n    \"DRIVERS_LICENSE\": 10,\r\n    \"PASSPORT\": 11\r\n}\r\n\r\nexport const ReqTypeNames = {\r\n    [ReqTypes.MONEY]: 'Dollars',\r\n    [ReqTypes.THERAPIST]: 'Therapist',\r\n    [ReqTypes.PHYSICIAN]: 'Physician',\r\n    [ReqTypes.THERAPIST_LETTER]: 'Letter from therapist',\r\n    [ReqTypes.PHYSICIAN_LETTER]: 'Letter from physician',\r\n    [ReqTypes.COURT_ORDER]: 'Court order of name change',\r\n    [ReqTypes.SOCIAL_SECURITY_CARD]: 'Updated social security card',\r\n    [ReqTypes.MVA_LETTER]: 'MVA letter certifying gender change',\r\n    [ReqTypes.DIGIAL_SOCIAL_SECURITY_UPDATE]: 'Updated name in Social Security computer systems',\r\n    [ReqTypes.INITIAL_COURT_ORDER]: 'Court order of name change',\r\n    [ReqTypes.DRIVERS_LICENSE]: 'Updated driver\\'s license',\r\n    [ReqTypes.PASSPORT]: 'Updated passport'\r\n}\r\n\r\nexport function nameOfReq(req) {\r\n    if (typeof req === \"number\") {\r\n        return ReqTypeNames[req];\r\n    }\r\n    return req.toString();\r\n}\r\n\r\nexport class UsesUpType {\r\n    constructor(type, amount) {\r\n        this.type = type;\r\n        this.amount = amount;\r\n    }\r\n\r\n    toString() {\r\n        return '' + this.amount + ' ' + nameOfReq(this.type);\r\n    }\r\n}\r\n\r\nexport function UsesUp(type, amount) {\r\n    return new UsesUpType(type, amount);\r\n}","import React from 'react';\r\nimport {nameOfReq} from './reqs';\r\n\r\n/*\r\n    {\r\n        name: \"File name change petition\",\r\n        description: \"Go to court and file a petition for name change!\",\r\n        requirements: [UsesUp(ReqTypes.MONEY, 50)],\r\n        outputs: [ReqTypes.INITIAL_COURT_ORDER],\r\n    },\r\n    */\r\n\r\nclass Step extends React.Component {\r\n  render() {\r\n      return (\r\n          <div className={\"smallStep \" + this.props.status}>\r\n            <div className=\"stepLeftColumn\">\r\n                {this.props.status === '' ? null :\r\n                    <input type=\"checkbox\"\r\n                        checked={this.props.status === 'done'}\r\n                        onChange={() => this.props.onCheckClicked(this.props.name)}\r\n                        />\r\n                }\r\n            </div>\r\n            <div className=\"stepRightColumn\">\r\n                <h3>{this.props.name}</h3>\r\n                <span>{this.props.description}</span>\r\n                <div style={{fontWeight: 'bold', marginTop:'12px'}}>Required:</div>\r\n                <ul>\r\n                    {this.props.requirements.map(\r\n                        element =>\r\n                            <li key={element.toString()}>{nameOfReq(element)}</li>\r\n                    )}\r\n                </ul>\r\n                <div style={{fontWeight: 'bold'}}>Gives You:</div>\r\n                <ul>\r\n                    {this.props.outputs.map(\r\n                        element =>\r\n                            <li key={element.toString()}>{nameOfReq(element)}</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Step;\r\n","/*\r\n * FROM HERE::\r\n * https://gist.github.com/alojzije/11127839\r\n */\r\n\r\n import $ from 'jquery'\r\n\r\nconst GUTTER_WIDTH = 80;\r\nconst COLUMN_WIDTH = 300;\r\n\r\n//helper functions, it turned out chrome doesn't support Math.sgn() \r\nfunction signum(x) {\r\n    return (x < 0) ? -1 : 1;\r\n}\r\nfunction absolute(x) {\r\n    return (x < 0) ? -x : x;\r\n}\r\n\r\nfunction drawPath(svg, path, startX, startY, endX, endY) {\r\n    // get the path's stroke width (if one wanted to be  really precize, one could use half the stroke size)\r\n    var stroke =  parseFloat(path.attr(\"stroke-width\"));\r\n    // check if the svg is big enough to draw the path, if not, set heigh/width\r\n    if (svg.attr(\"height\") <  startY + stroke)        svg.attr(\"height\", startY + stroke);\r\n    if (svg.attr(\"height\") <  endY + stroke)          svg.attr(\"height\", endY + stroke);\r\n    if (svg.attr(\"width\" ) < (endX) )                 svg.attr(\"width\", (endX));\r\n    \r\n    var deltaX = (endX - startX) * 0.15;\r\n    var deltaY = (endY - startY) * 0.15;\r\n    // for further calculations which ever is the shortest distance\r\n    var delta  =  deltaX < absolute(deltaY) ? deltaX : absolute(deltaY);\r\n\r\n    // set sweep-flag (counter/clock-wise)\r\n    // if start element is closer to the left edge,\r\n    // draw the first arc counter-clockwise, and the second one clock-wise\r\n    var arc1 = 0; var arc2 = 1;\r\n    if (startY < endY) {\r\n        arc1 = 1;\r\n        arc2 = 0;\r\n    }\r\n\r\n    // Shift right by half a gutter so that each colum\r\n    // includes the gutter to the left of it\r\n    const lastGutter = Math.floor((endX + GUTTER_WIDTH / 2) / (COLUMN_WIDTH + GUTTER_WIDTH));\r\n    const riseX = lastGutter * (COLUMN_WIDTH + GUTTER_WIDTH) - GUTTER_WIDTH / 2;\r\n\r\n    // draw tha pipe-like path\r\n    // 1. move a bit down, 2. arch,  3. move a bit to the right, 4.arch, 5. move down to the end \r\n    path.attr(\"d\",  \"M\"  + startX + \" \" + startY +\r\n    \" H\" + (riseX) +\r\n    \" A\" + delta + \" \" +  delta + \" 0 0 \" + arc1 + \" \" + (riseX + delta) + \" \" + (startY+ delta*signum(deltaY)) +\r\n    \" V\" + (endY - delta*signum(deltaY)) + \r\n    \" A\" + delta + \" \" +  delta + \" 0 0 \" + arc2 + \" \" + (riseX + 2*delta) + \" \" + (endY) +\r\n    \" H\" + endX );\r\n}\r\n\r\nfunction connectElements(svgContainer, svg, path, startElem, endElem) {\r\n    // if first element is further rigth than the second, swap!\r\n    if(startElem.offset().left > endElem.offset().left){\r\n        var temp = startElem;\r\n        startElem = endElem;\r\n        endElem = temp;\r\n    }\r\n\r\n    // get (top, left) corner coordinates of the svg container   \r\n    var svgTop  = svgContainer.offset().top;\r\n    var svgLeft = svgContainer.offset().left;\r\n\r\n    // get (top, left) coordinates for the two elements\r\n    var startCoord = startElem.offset();\r\n    var endCoord   = endElem.offset();\r\n\r\n    const tweakWeight = 0.2;\r\n    const tweak = (endCoord.top - startCoord.top) / svgContainer.outerHeight();\r\n\r\n    // calculate path's start (x,y)  coords\r\n    // we want the x coordinate to visually result in the element's mid point\r\n    var startX = startCoord.left + startElem.outerWidth() - svgLeft;    // x = left offset + width - svg's left offset\r\n    var startY = startCoord.top  + (0.5 + tweakWeight * tweak)*startElem.outerHeight() - svgTop;        // y = top offset + 0.5*height - svg's top offset\r\n\r\n        // calculate path's end (x,y) coords\r\n    var endX = endCoord.left - svgLeft;\r\n    var endY = endCoord.top + (0.5 - tweakWeight * tweak)*endElem.outerHeight()  - svgTop;\r\n\r\n    // call function for drawing the path\r\n    drawPath(svg, path, startX, startY, endX, endY);\r\n\r\n}\r\n\r\n\r\nclass SVGDraw {\r\n    connections = [];\r\n    svg;\r\n\r\n    connect(path, node1, node2) {\r\n        this.connections.push({path, node1, node2});\r\n\r\n        if (this.svg && this.svgContainer) {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    connectAll() {\r\n        this.connections.forEach(\r\n            connection => \r\n                connectElements(\r\n                    $(this.svgContainer),\r\n                    $(this.svg),\r\n                    $(connection.path),\r\n                    $(connection.node1),\r\n                    $(connection.node2)\r\n                )\r\n        );\r\n    }\r\n\r\n    setUp(newSVG, newSVGContainer) {\r\n        this.svg = newSVG;\r\n        this.svgContainer = newSVGContainer;\r\n\r\n        this.reset();\r\n        $(window).resize(this.reset.bind(this));\r\n    }\r\n\r\n    reset() {\r\n        // reset svg each time \r\n        $(this.svg).attr(\"height\", \"0\");\r\n        $(this.svg).attr(\"width\", \"0\");\r\n        this.connectAll();\r\n    }\r\n}\r\n\r\nexport default SVGDraw;","import React from 'react';\r\nconst SVGDrawContext = React.createContext(null);\r\nexport default SVGDrawContext;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SVGDraw from './svgDraw';\r\nimport $ from 'jquery';\r\nimport SVGDrawContext from './svgDrawContext';\r\n\r\nclass SVGContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.svgDraw = new SVGDraw();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.svgDraw.setUp(\r\n            $(ReactDOM.findDOMNode(this)).find('svg'),\r\n            ReactDOM.findDOMNode(this)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"svgContainer\">\r\n                <svg width=\"0\" height=\"0\">\r\n                <SVGDrawContext.Provider value={this.svgDraw}>\r\n                    {this.props.children}\r\n                </SVGDrawContext.Provider>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SVGContainer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SVGDrawContext from './svgDrawContext';\r\n\r\nclass Connection extends React.Component {\r\n    // We need to get a ref to this and then call this in the parent\r\n    // apparently, because the refs are in a different subtree\r\n    // so React doesn't realize they need to be rendered before calling\r\n    // componentDidMount on this object\r\n    allComponentsDidMount() {\r\n        this.context.connect(\r\n            ReactDOM.findDOMNode(this),\r\n            ReactDOM.findDOMNode(this.props.startRef.current),\r\n            ReactDOM.findDOMNode(this.props.endRef.current));\r\n    }\r\n\r\n    render() {\r\n        const stroke = 'rgb(' +\r\n            Math.floor(Math.random() * 255) + ',' +\r\n            Math.floor(Math.random() * 255) + ',' +\r\n            Math.floor(Math.random() * 255) + ')';\r\n        return (\r\n            <path d=\"M0 0\" stroke={stroke} fill=\"none\" strokeWidth=\"12px\"/>\r\n        );\r\n    }\r\n}\r\nConnection.contextType = SVGDrawContext;\r\n\r\nexport default Connection;\r\n","import {ReqTypes, UsesUp} from './reqs';\r\n\r\nexport const STARTING_MATERIALS = new Set([\r\n    ReqTypes.THERAPIST,\r\n    ReqTypes.PHYSICIAN,\r\n    ReqTypes.MONEY\r\n]);\r\n\r\nexport const STEPS = {\r\n    \"File name change petition\": {\r\n        name: \"File name change petition\",\r\n        description: \"Go to court and file a petition for name change!\",\r\n        requirements: [UsesUp(ReqTypes.MONEY, 50)],\r\n        outputs: [ReqTypes.INITIAL_COURT_ORDER],\r\n    },\r\n    \"Get copies of court order\": {\r\n        name: \"Get copies of court order\",\r\n        description: \"Get a bunch of copies that you won't end up needing all of....\",\r\n        requirements: [ReqTypes.INITIAL_COURT_ORDER],\r\n        outputs: [ReqTypes.COURT_ORDER]\r\n    },\r\n    \"Request therapist letter\": {\r\n        name: \"Request therapist letter\",\r\n        description: \"Get a therapist to give you a letter\",\r\n        requirements: [ReqTypes.THERAPIST],\r\n        outputs: [ReqTypes.THERAPIST_LETTER]\r\n    },\r\n    \"Request physician letter\": {\r\n        name: \"Request physician letter\",\r\n        description: \"Get a physician to give you a letter\",\r\n        requirements: [ReqTypes.PHYSICIAN],\r\n        outputs: [ReqTypes.PHYSICIAN_LETTER]\r\n    },\r\n    \"Go to Social Security\": {\r\n        name: \"Go to Social Security\",\r\n        description: \"Thanks FDR\",\r\n        requirements: [UsesUp(ReqTypes.COURT_ORDER, 1), UsesUp(ReqTypes.PHYSICIAN_LETTER, 1)],\r\n        outputs: [ReqTypes.SOCIAL_SECURITY_CARD, ReqTypes.DIGIAL_SOCIAL_SECURITY_UPDATE]\r\n    },\r\n    \"Go to MVA HQ\": {\r\n        name: \"Go to MVA HQ\",\r\n        description: \"Did you know Glen Burnie is actually still PG County?\",\r\n        requirements: [UsesUp(ReqTypes.PHYSICIAN_LETTER, 1), UsesUp(ReqTypes.THERAPIST_LETTER, 1)],\r\n        outputs: [ReqTypes.MVA_LETTER]\r\n    },\r\n    \"Go to MVA\": {\r\n        name: \"Go to MVA\",\r\n        description: \"Do that\",\r\n        requirements: [ReqTypes.DIGIAL_SOCIAL_SECURITY_UPDATE, UsesUp(ReqTypes.MVA_LETTER, 1)],\r\n        outputs: [ReqTypes.DRIVERS_LICENSE]\r\n    },\r\n    \"Go to passport place\": {\r\n        name: \"Go to passport place\",\r\n        description: \"Do that\",\r\n        requirements: [UsesUp(ReqTypes.COURT_ORDER, 1), UsesUp(ReqTypes.PHYSICIAN_LETTER, 1)],\r\n        outputs: [ReqTypes.PASSPORT]\r\n    }\r\n};","import React from 'react';\r\nimport Step from './step';\r\nimport './App.css';\r\nimport SVGContainer from './svgContainer';\r\nimport Connection from './connection';\r\nimport $ from 'jquery';\r\nimport {UsesUpType, nameOfReq} from './reqs';\r\nimport {STEPS, STARTING_MATERIALS} from './data';\r\n\r\nclass Loader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { completedSteps: [] };\r\n    }\r\n\r\n    getRawReq(req) {\r\n        return (req instanceof UsesUpType) ? req.type : req;\r\n    }\r\n\r\n    satisfiesRequirement(req, materials) {\r\n        return (req instanceof UsesUpType && materials.has(req.type)) || materials.has(req);\r\n    }\r\n\r\n    getNextColumn(steps, materials, sources) {\r\n        let nextMaterials = new Set(materials);\r\n        let nextSteps = [];\r\n        let remainingSteps = [];\r\n        let nextSources = {...sources};\r\n\r\n        Object.values(steps).forEach(step => {\r\n            if (step.requirements.map(req => this.satisfiesRequirement(req, materials)).reduce((acc, curr) => acc && curr)) {\r\n                nextSteps.push(step);\r\n                nextMaterials = new Set([...nextMaterials, ...step.outputs]);\r\n                step.outputs.forEach(o => nextSources[o] = step.name);\r\n            } else {\r\n                remainingSteps.push(step);\r\n            }\r\n        });\r\n\r\n        return {\r\n            nextMaterials: new Set(nextMaterials), nextSteps, remainingSteps, nextSources\r\n        };\r\n    }\r\n\r\n    getAvailableSteps(materials) {\r\n        return this.getNextColumn(STEPS, materials, {}).nextSteps;\r\n    }\r\n\r\n    getColumnsWithSources() {\r\n        let columns = [];\r\n        let materials = STARTING_MATERIALS;\r\n        let remainingSteps = STEPS;\r\n        let counter = 0;\r\n        let sources = {};\r\n        while (counter < 4 && remainingSteps !== []) {\r\n            const next = this.getNextColumn(remainingSteps, materials, sources);\r\n            columns.push(next.nextSteps);\r\n            remainingSteps = next.remainingSteps;\r\n            materials = next.nextMaterials;\r\n            sources = next.nextSources;\r\n            counter++;\r\n        }\r\n\r\n        return {columns, sources};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connectionRefs.forEach(ref => ref.current.allComponentsDidMount());\r\n\r\n        $('.overviewContainer').scroll(\r\n            e => {\r\n                $('.svgContainer').css({\r\n                    left: -$('.overviewContainer').scrollLeft()\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    stepChecked(name) {\r\n        const index = this.state.completedSteps.find(el => el === name);\r\n        if (index !== undefined) {\r\n            this.setState(\r\n                oldState => ({\r\n                    completedSteps: oldState.completedSteps.splice(\r\n                        index,\r\n                        1\r\n                    )\r\n                })\r\n            )\r\n        } else {\r\n            this.setState(\r\n                oldState => ({\r\n                    completedSteps: [...oldState.completedSteps, name]\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const columnsWithSources = this.getColumnsWithSources();\r\n        const columns = columnsWithSources.columns;\r\n        const sources = columnsWithSources.sources;\r\n\r\n        let stepRefs = {};\r\n        this.connectionRefs = [];\r\n        let connections = [];\r\n        columns.forEach(\r\n            column =>\r\n                column.forEach(\r\n                    step => {\r\n                        stepRefs[step.name] = React.createRef();\r\n\r\n                        step.requirements.forEach(\r\n                            req => {\r\n                                connections.push([sources[this.getRawReq(req)], step.name]);\r\n                            }\r\n                        )\r\n                    }\r\n                )\r\n        );\r\n\r\n        const currentMaterials = this.state.completedSteps.length === 0 ? STARTING_MATERIALS :\r\n            new Set(\r\n                [...this.state.completedSteps\r\n                    .map(stepName => STEPS[stepName].outputs)\r\n                    .reduce((acc, curr) => [...acc, ...curr]),\r\n                ...STARTING_MATERIALS]\r\n            );\r\n\r\n        let stepStatuses = {};\r\n        const availableNextSteps = this.getAvailableSteps(currentMaterials);\r\n\r\n        availableNextSteps.forEach(step => stepStatuses[step.name] = 'available');\r\n        this.state.completedSteps.forEach(stepName => stepStatuses[stepName] = 'done');\r\n\r\n        return (\r\n            <>\r\n                <SVGContainer>\r\n                    {connections.map(\r\n                        connection => {\r\n                            if (!connection[0]) {\r\n                                return null;\r\n                            }\r\n                            const ref = React.createRef();\r\n                            this.connectionRefs.push(ref);\r\n                            return (\r\n                                <Connection\r\n                                    key={connection[0] + '.' + connection[1]}\r\n                                    ref={ref}\r\n                                    startRef={stepRefs[connection[0]]}\r\n                                    endRef={stepRefs[connection[1]]}\r\n                                    />\r\n                                )}\r\n                    )}\r\n                    \r\n                </SVGContainer>\r\n                <div className=\"overviewContainer\">\r\n                    {columns.map(\r\n                        (column, index) => (\r\n                            <div className=\"column\" key={index}>\r\n                                {column.map(\r\n                                    step =>\r\n                                        <Step\r\n                                            ref={stepRefs[step.name]}\r\n                                            status={\r\n                                                step.name in stepStatuses ?\r\n                                                    stepStatuses[step.name] :\r\n                                                    ''\r\n                                            }\r\n                                            key={step.name}\r\n                                            onCheckClicked={this.stepChecked.bind(this)}\r\n                                            {...step}\r\n                                        />\r\n                                    )}\r\n                            </div>\r\n                        )\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Loader from './loader';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\n        <Loader />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}